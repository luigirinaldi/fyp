1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 4, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         5ms LemmaSledge.AddSub_1614 8:241  
1.sledgehammer goal.proof     38942ms LemmaSledge.AddSub_1614 8:241  some (SH 38942ms, ATP 104ms) [cvc5]: Try this: by (metis diff_diff_eq diff_left_eq_prec diff_right_eq_prec diff_self) (22 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 4
1.sledgehammer finalize   Max number of sledgehammer lemmas: 4
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 38.942
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.104
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 38.942
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.104
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 4, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         6ms LemmaSledge.muldivrem_152 8:214  
1.sledgehammer goal.proof     26983ms LemmaSledge.muldivrem_152 8:214  some (SH 26983ms, ATP 486ms) [cvc5]: Try this: by (metis bw_0 mul_eq_prec mult.commute mult_minus1 verit_minus_simplify(3)) (25 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 5
1.sledgehammer finalize   Max number of sledgehammer lemmas: 5
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 26.983
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.486
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 26.983
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.486
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 4, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         3ms LemmaSledge.Select_1105 8:167  succeeded
1.sledgehammer goal.proof      1294ms LemmaSledge.Select_1105 8:167  some (SH 1294ms, ATP 259ms) [cvc5]: Try this: by simp (0.3 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 0
1.sledgehammer finalize   Max number of sledgehammer lemmas: 0
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 1.294
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.259
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 1.294
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.259
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 4, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         4ms LemmaSledge.InstCombineShift497d 8:323  
1.sledgehammer goal.proof     278144ms LemmaSledge.InstCombineShift497d 8:323  timeout (SH 278144ms) [cvc5]: Timed out
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 0
1.sledgehammer finalize   Number of sledgehammer lemmas: 0
1.sledgehammer finalize   Max number of sledgehammer lemmas: 0
1.sledgehammer finalize   Success rate: 0%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 0
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 278.144
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.000
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 278.144
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.000
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 4, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         4ms LemmaSledge.AddSub_1164 8:241  
1.sledgehammer goal.proof     27148ms LemmaSledge.AddSub_1164 8:241  some (SH 27148ms, ATP 48ms) [cvc5]: Try this: by (simp add: add_eq_prec bw_0) (0.9 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 4
1.sledgehammer finalize   Max number of sledgehammer lemmas: 4
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 27.148
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.048
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 27.148
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.048
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 4, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         6ms LemmaSledge.AddSub_1574 8:254  
1.sledgehammer goal.proof     27106ms LemmaSledge.AddSub_1574 8:254  some (SH 27106ms, ATP 1289ms) [cvc5]: Try this: by (metis diff_diff_eq diff_left_eq_prec diff_right_commute diff_right_eq_prec) (32 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 5
1.sledgehammer finalize   Max number of sledgehammer lemmas: 5
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 27.106
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 1.289
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 27.106
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 1.289
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 4, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         6ms LemmaSledge.muldivrem_239 8:265  
1.sledgehammer goal.proof     71813ms LemmaSledge.muldivrem_239 8:265  some (SH 71813ms, ATP 2296ms) [cvc5]: Try this: by (metis bw_0 diff_right_commute eq_iff_diff_eq_0 int_distrib(4) mul_eq_prec mult.commute) (78 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 6
1.sledgehammer finalize   Max number of sledgehammer lemmas: 6
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 71.813
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 2.296
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 71.813
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 2.296
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 4, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         6ms LemmaSledge.AddSub_1176 8:241  
1.sledgehammer goal.proof     27094ms LemmaSledge.AddSub_1176 8:241  some (SH 27094ms, ATP 101ms) [cvc5]: Try this: by (metis add.commute add_0 add_diff_eq add_eq_prec) (593 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 4
1.sledgehammer finalize   Max number of sledgehammer lemmas: 4
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 27.094
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.101
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 27.094
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.101
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 4, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         3ms LemmaSledge.Select_1100 8:167  succeeded
1.sledgehammer goal.proof      1308ms LemmaSledge.Select_1100 8:167  some (SH 1308ms, ATP 240ms) [cvc5]: Try this: by simp (0.3 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 0
1.sledgehammer finalize   Max number of sledgehammer lemmas: 0
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 1.308
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.240
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 1.308
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.240
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 4, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         5ms LemmaSledge.AddSub_1539_2 8:224  
1.sledgehammer goal.proof     27035ms LemmaSledge.AddSub_1539_2 8:224  some (SH 27035ms, ATP 466ms) [cvc5]: Try this: by (metis add.commute add_eq_prec uminus_add_conv_diff) (30 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 3
1.sledgehammer finalize   Max number of sledgehammer lemmas: 3
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 27.035
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.466
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 27.035
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.466
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 4, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         5ms LemmaSledge.muldivrem_290_292 8:293  
1.sledgehammer goal.proof     276477ms LemmaSledge.muldivrem_290_292 8:293  some (SH 276477ms, ATP 632ms) [cvc5]: Try this: by (metis comm_monoid_mult_class.mult_1 mul_eq_prec mult.commute shl_def) (23 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 4
1.sledgehammer finalize   Max number of sledgehammer lemmas: 4
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 276.477
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.632
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 276.477
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.632
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 4, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         5ms LemmaSledge.muldivrem_229 8:302  
1.sledgehammer goal.proof     107236ms LemmaSledge.muldivrem_229 8:302  some (SH 107236ms, ATP 140ms) [cvc5]: Try this: by (metis add.commute add_eq_prec distrib_right mul_eq_prec) (35 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 4
1.sledgehammer finalize   Max number of sledgehammer lemmas: 4
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 107.236
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.140
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 107.236
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.140
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 4, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         6ms LemmaSledge.AddSub_1165 8:281  
1.sledgehammer goal.proof     27144ms LemmaSledge.AddSub_1165 8:281  some (SH 27144ms, ATP 53ms) [cvc5]: Try this: by (metis add_cancel_left_left add_eq_prec diff_add_eq diff_add_eq_diff_diff_swap diff_left_eq_prec diff_right_eq_prec) (45 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 6
1.sledgehammer finalize   Max number of sledgehammer lemmas: 6
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 27.144
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.053
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 27.144
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.053
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 4, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         5ms LemmaSledge.AddSub_1619 8:241  
1.sledgehammer goal.proof     27162ms LemmaSledge.AddSub_1619 8:241  some (SH 27161ms, ATP 116ms) [cvc5]: Try this: by (simp add: diff_left_eq_prec diff_right_eq_prec) (2 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 4
1.sledgehammer finalize   Max number of sledgehammer lemmas: 4
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 27.161
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.116
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 27.161
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.116
