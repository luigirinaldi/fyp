1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 1, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         4ms LemmaSledge.AddSub_1614 8:241  
1.sledgehammer goal.proof     27133ms LemmaSledge.AddSub_1614 8:241  some (SH 27133ms, ATP 197ms) [cvc5]: Try this: by (metis diff_diff_eq diff_left_eq_prec diff_right_eq_prec diff_self) (33 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 4
1.sledgehammer finalize   Max number of sledgehammer lemmas: 4
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 27.133
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.197
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 27.133
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.197
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 1, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         4ms LemmaSledge.muldivrem_152 8:214  
1.sledgehammer goal.proof     27041ms LemmaSledge.muldivrem_152 8:214  some (SH 27041ms, ATP 416ms) [cvc5]: Try this: by (metis bw_0 mul_eq_prec mult.commute mult_minus1 verit_minus_simplify(3)) (31 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 5
1.sledgehammer finalize   Max number of sledgehammer lemmas: 5
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 27.041
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.416
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 27.041
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.416
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 1, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         3ms LemmaSledge.Select_1105 8:167  succeeded
1.sledgehammer goal.proof      1199ms LemmaSledge.Select_1105 8:167  some (SH 1199ms, ATP 222ms) [cvc5]: Try this: by simp (0.3 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 0
1.sledgehammer finalize   Max number of sledgehammer lemmas: 0
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 1.199
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.222
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 1.199
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.222
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 1, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         6ms LemmaSledge.InstCombineShift497d 8:323  
1.sledgehammer goal.proof     279204ms LemmaSledge.InstCombineShift497d 8:323  timeout (SH 279204ms) [cvc5]: Timed out
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 0
1.sledgehammer finalize   Number of sledgehammer lemmas: 0
1.sledgehammer finalize   Max number of sledgehammer lemmas: 0
1.sledgehammer finalize   Success rate: 0%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 0
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 279.204
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.000
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 279.204
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.000
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 1, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         4ms LemmaSledge.AddSub_1164 8:241  
1.sledgehammer goal.proof     27124ms LemmaSledge.AddSub_1164 8:241  some (SH 27124ms, ATP 54ms) [cvc5]: Try this: by (simp add: add_eq_prec bw_0) (0.8 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 4
1.sledgehammer finalize   Max number of sledgehammer lemmas: 4
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 27.124
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.054
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 27.124
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.054
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 1, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         5ms LemmaSledge.AddSub_1574 8:254  
1.sledgehammer goal.proof     27081ms LemmaSledge.AddSub_1574 8:254  some (SH 27081ms, ATP 1574ms) [cvc5]: Try this: by (metis diff_diff_eq diff_left_eq_prec diff_right_commute diff_right_eq_prec) (29 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 5
1.sledgehammer finalize   Max number of sledgehammer lemmas: 5
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 27.081
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 1.574
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 27.081
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 1.574
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 1, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         5ms LemmaSledge.muldivrem_239 8:265  
1.sledgehammer goal.proof     27177ms LemmaSledge.muldivrem_239 8:265  some (SH 27177ms, ATP 4674ms) [cvc5]: Try this: by (metis diff_eq_diff_eq diff_left_eq_prec diff_right_commute int_distrib(4) mul_eq_prec mult.commute times_int_code(1)) (109 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 7
1.sledgehammer finalize   Max number of sledgehammer lemmas: 7
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 27.177
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 4.674
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 27.177
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 4.674
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 1, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         5ms LemmaSledge.AddSub_1176 8:241  
1.sledgehammer goal.proof     27132ms LemmaSledge.AddSub_1176 8:241  some (SH 27132ms, ATP 93ms) [cvc5]: Try this: by (metis (no_types, opaque_lifting) diff_diff_eq2 diff_right_eq_prec eq_iff_diff_eq_0) (74 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 3
1.sledgehammer finalize   Max number of sledgehammer lemmas: 3
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 27.132
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.093
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 27.132
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.093
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 1, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         3ms LemmaSledge.Select_1100 8:167  succeeded
1.sledgehammer goal.proof      1184ms LemmaSledge.Select_1100 8:167  some (SH 1184ms, ATP 244ms) [cvc5]: Try this: by auto (0.2 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 0
1.sledgehammer finalize   Max number of sledgehammer lemmas: 0
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 1.184
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.244
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 1.184
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.244
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 1, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         6ms LemmaSledge.AddSub_1539_2 8:224  
1.sledgehammer goal.proof     27042ms LemmaSledge.AddSub_1539_2 8:224  some (SH 27042ms, ATP 477ms) [cvc5]: Try this: by (metis ab_group_add_class.ab_diff_conv_add_uminus add.commute add_eq_prec) (31 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 3
1.sledgehammer finalize   Max number of sledgehammer lemmas: 3
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 27.042
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.477
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 27.042
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.477
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 1, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         5ms LemmaSledge.muldivrem_290_292 8:293  
1.sledgehammer goal.proof     75627ms LemmaSledge.muldivrem_290_292 8:293  some (SH 75627ms, ATP 629ms) [cvc5]: Try this: by (metis mul_eq_prec mult.commute mult_numeral_1 numeral_One shl_def) (28 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 5
1.sledgehammer finalize   Max number of sledgehammer lemmas: 5
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 75.627
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.629
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 75.627
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.629
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 1, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         4ms LemmaSledge.muldivrem_229 8:302  
1.sledgehammer goal.proof     27085ms LemmaSledge.muldivrem_229 8:302  some (SH 27085ms, ATP 89ms) [cvc5]: Try this: by (metis add.commute add_eq_prec mul_eq_prec ring_class.ring_distribs(2)) (36 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 4
1.sledgehammer finalize   Max number of sledgehammer lemmas: 4
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 27.085
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.089
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 27.085
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.089
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 1, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         5ms LemmaSledge.AddSub_1165 8:281  
1.sledgehammer goal.proof     27155ms LemmaSledge.AddSub_1165 8:281  some (SH 27155ms, ATP 49ms) [cvc5]: Try this: by (metis add_0 add_eq_prec diff_add_eq diff_add_eq_diff_diff_swap diff_left_eq_prec diff_right_eq_prec) (45 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 6
1.sledgehammer finalize   Max number of sledgehammer lemmas: 6
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 27.155
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.049
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 27.155
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.049
1.sledgehammer initialize Params for sledgehammer: {abduce = SOME 0, cache_dir = NONE, compress = NONE, debug = false, expect =
1.sledgehammer initialize  "", fact_filter = NONE, fact_thresholds = (0.45, 0.85), falsify =
1.sledgehammer initialize  SOME false, induction_rules = NONE, instantiate = NONE, isar_proofs = NONE,
1.sledgehammer initialize  lam_trans = NONE, learn = true, max_facts = NONE, max_mono_iters = NONE,
1.sledgehammer initialize  max_new_mono_instances = NONE, max_proofs = 1, minimize = true, overlord =
1.sledgehammer initialize  false, preplay_timeout = 1.000, provers =
1.sledgehammer initialize  ["cvc5", "cvc5_proof", "verit", "z3", "e", "spass", "vampire",
1.sledgehammer initialize   "zipperposition"],
1.sledgehammer initialize  slices = 96, smt_proofs = true, spy = false, strict = false, timeout =
1.sledgehammer initialize  300.000, try0 = true, type_enc = NONE, uncurried_aliases = NONE, verbose =
1.sledgehammer initialize  false}
0.try0 goal.proof         5ms LemmaSledge.AddSub_1619 8:241  
1.sledgehammer goal.proof     27142ms LemmaSledge.AddSub_1619 8:241  some (SH 27142ms, ATP 144ms) [cvc5]: Try this: by (simp add: diff_left_eq_prec diff_right_eq_prec) (3 ms)
1.sledgehammer finalize   Total number of sledgehammer calls: 1
1.sledgehammer finalize   Number of successful sledgehammer calls: 1
1.sledgehammer finalize   Number of sledgehammer lemmas: 4
1.sledgehammer finalize   Max number of sledgehammer lemmas: 4
1.sledgehammer finalize   Success rate: 100%
1.sledgehammer finalize   Total number of nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Number of successful nontrivial sledgehammer calls: 1
1.sledgehammer finalize   Total time for sledgehammer calls (Isabelle): 27.142
1.sledgehammer finalize   Total time for successful sledgehammer calls (ATP): 0.144
1.sledgehammer finalize   Average time for sledgehammer calls (Isabelle): 27.142
1.sledgehammer finalize   Average time for successful sledgehammer calls (ATP): 0.144
